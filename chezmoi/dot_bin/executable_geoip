#!/usr/bin/env python
#
# Copyright (c) 2015, Ben Mezger, me@benmezger.nl
#
# Permission to use, copy, modify, and/or distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
#

from urllib.request import urlopen
from json import loads
from socket import gethostbyname, gethostname
from os import getenv
import asyncio

try:
    import speedtest

    has_speedtest = True
except ImportError:
    has_speedtest = False


async def test_speed(threads: int = 2):
    if has_speedtest:
        s = speedtest.Speedtest()
        return s.download(threads=threads), s.upload(threads=threads)
    return None, None


def humansize(nbytes):
    suffixes = ["B", "KB", "MB", "GB", "TB", "PB"]
    i = 0
    while nbytes >= 1024 and i < len(suffixes) - 1:
        nbytes /= 1024.0
        i += 1
    f = ("%.2f" % nbytes).rstrip("0").rstrip(".")
    return "%s %s" % (f, suffixes[i])


async def fetch_url(url: str):
    return loads(urlopen(url).read())


async def main():
    ip_info, vpn_info, tor_info, speed = await asyncio.gather(
        fetch_url("https://ipinfo.io"),
        fetch_url("https://api.nordvpn.com/vpn/check/full"),
        fetch_url("https://check.torproject.org/api/ip"),
        test_speed(),
    )

    download, upload = speed

    print("Public IP:", ip_info.get("ip"))
    print("Country:", ip_info.get("country"))
    print("City", ip_info.get("city"))
    print("ISP:", vpn_info.get("isp"))

    print("Is Torified:", tor_info.get("IsTor"))
    print("VPN:", vpn_info.get("status", "N/A"))
    print("VPN IP:", vpn_info.get("ip", "N/A"))
    print("VPN Location:", vpn_info.get("country", "N/A"))

    print("Local IP:", gethostbyname(gethostname()))
    print("Hostname:", gethostname())

    print("\nLocal variables:")
    print("HTTP Proxy:", getenv("http_proxy"))
    print("HTTPS Proxy:", getenv("https_proxy"))
    print("FTP Proxy:", getenv("ftp_proxy"))

    if download and upload:
        print("Download speed:", humansize(download))
        print("Upload speed:", humansize(upload))


if __name__ == "__main__":
    asyncio.run(main())
