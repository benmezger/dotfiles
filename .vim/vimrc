" Ben Mezger
" some configs from:
" https://github.com/rstacruz/vim-opinion/

source ~/.vim/plugins.vim " include plugs

" default file encoding and unicode
set encoding=utf-8
set fileencoding=utf-8
set fileencodings=utf-8
set bomb                     " vim will put a 'byte order mark' (
                             " or BOM for short) at the start of Unicode files
set fileformats=unix,mac,dos " recognize file formats

set backspace=indent,eol,start " make backspace work like most other apps

" space > tabs
set tabstop=4
set shiftwidth=4 
set softtabstop=4
set expandtab " insert space character when tab is pressed
set modeline
set expandtab " helps with backspacing because of expandtab

" options
" opening a new file when the current buffer has unsaved changes causes files " to be hidden instead of closed.
" The unsaved changes can still be accessed by typing :ls and then :b[N],
" where [N] is the number of a buffer
" see: http://usevim.com/2012/10/19/vim101-set-hidden/
set hidden         " don't care about closing modified buffers
set showcmd        " display incomplete commands
set history=50     " keep 50 lines of command line history
let mapleader=','  " use ',' as mapleader
set colorcolumn=80 " Color in column 80

               " searching
set hlsearch   " highlight all search matches
set incsearch  " start searching when you type the first character of the search string
set ignorecase " searching is not case sensitive
set smartcase  " when 'ignorecase' and 'smartcase' are both on, if a
               " pattern contains an uppercase letter, it is case sensitive,
               " otherwise, it is not
set gdefault   " sub all matches in a line by default

set binary        " makes Vim more suitable for editing binary files
set shell=/bin/sh " use sh as default shell

" programming
syntax on
set cindent          " enables automatic indenting c-style
set cinoptions=l1,j1 " affects the way cindent reindents lines
set showmatch        " flashes matching brackets or parenthasis
set matchtime=3      " how long to flash brackets

" backups
set nobackup       " don't backup
set nowritebackup  " don't make backup before overwritting
set noswapfile     " fuck swapfiles
set directory=/tmp " dir for tmp files

" jump to the last position when reopening a file
if has("autocmd")
  au BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g'\"" | endif
endif

" info
set number          " number lines
set numberwidth=5   " width of number column
set showmode        " shows vi mode in lower left
set cmdheight=1     " more room for error msgs
set scrolloff=4     " places a couple lines between the current line and the screen edge
set sidescrolloff=2 " places a couple lines between the current column and the screen edge
set laststatus=2    " status bar always visible
set ttyfast         " improve redrawing
set lazyredraw      " will not redraw the screen while running macros (goes faster)

" encryption

if has('cryptv')
  if v:version > 704 || v:version == 704 && has('patch399')
    set cryptmethod=blowfish2   " make encryption the most secure
  elseif v:version >= 703
    set cryptmethod=blowfish    " make encryption more secure than pkzip
  endif
endif

if has('linebreak')
  try
    set breakindent             " visually indent wrapped lines
    let &showbreak='â†³'
  catch /E518:/
    " Unknown option: breakindent
  endtry
endif

" menu compilation

set wildmenu                    " enhanced ed command completion
set wildignore+=*.~             " ignore compiled objects and backups
set wig+=*.o,*.obj,*.pyc
set wig+=.sass-cache,tmp
set wildmode=longest:full,list:full

" appearance
colorscheme base16-monokai
let base16colorspace=256 " Access colors present in 256 colorspace
set background=dark

" statusline config from -> http://stackoverflow.com/a/5380230/6744969
hi User1 ctermfg=16 ctermbg=234      
hi User2 ctermfg=196 ctermbg=234
hi User3 ctermfg=171 ctermbg=234
hi User4 ctermfg=70 ctermbg=234   
hi User5 ctermfg=226 ctermbg=234 

set statusline=
set statusline +=%1*\ %n\ %*            "buffer number
set statusline +=%5*%{&ff}%*            "file format
set statusline +=%3*%y%*                "file type
set statusline +=%4*\ %<%F%*            "full path
set statusline +=%2*%m%*                "modified flag
set statusline +=%1*%=%5l%*             "current line
set statusline +=%2*/%L%*               "total lines
set statusline +=%1*%4v\ %*             "virtual column number
set statusline +=%2*0x%04B\ %*          "character under cursor

" keybindings to make life easier
cnoreabbrev W! w!
cnoreabbrev Q! q!
cnoreabbrev Wq wq
cnoreabbrev Wa wa
cnoreabbrev wQ wq
cnoreabbrev WQ wq
cnoreabbrev W w
cnoreabbrev Q q

"
" plugs
"

"" syntastic recommended settings
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0

"" vim-gitgutter
set updatetime=250                  " . The delay is governed by vim's updatetime option
let g:gitgutter_highlight_lines = 1 " highlight line

"" YouCompleteMe
let g:ycm_python_binary_path = 'python2'          " use python 2.* by default
let g:ycm_collect_identifiers_from_tags_files = 1 " use tag files

"" incsearch.vim
map /  <Plug>(incsearch-forward)
map ?  <Plug>(incsearch-backward)
map g/ <Plug>(incsearch-stay)

"" vim-easy align
" start interactive EasyAlign in visual mode (e.g. vipga)
xmap ga <Plug>(EasyAlign)

" Start interactive EasyAlign for a motion/text object (e.g. gaip)
nmap ga <Plug>(EasyAlign)


"" vim-markdown
let g:vim_markdown_folding_disabled = 1 " Disable folding

" Allow for TOC window to auto-fit when it's possible to it to shrink
let g:vim_markdown_toc_autofit = 1

" fenced code block
let g:vim_markdown_fenced_languages = ['c++=cpp', 'viml=vim', 'python=py', 'c=c'] 

" used as $x^2$, $$x^2$$, escapable as \$x\$ and \$\$x\$\$
let g:vim_markdown_math = 1 


"" vim-startify

" bookmarks
let g:startify_bookmarks = [{'d': '~/workspace/git/dotfiles'},
            \ {'w': '~/workspace'},
            \ {'t': '/etc'},
            \ ]

let g:startify_update_oldfiles = 0 " update :Startify on-the-fly
let g:startify_session_autoload = 1 " auto load session if dir contains a Session.vim
let g:startify_files_number = 20 " show 20 files

"" ctrlp
let g:ctrlp_working_path_mode = 'ra'     "  set local working directory
set wildignore+=*/tmp/*,*.so,*.swp,*.zip "  exclude these files linux/osx
let g:ctrlp_custom_ignore = {
    \ 'dir':  '\v[\/]\.(git|hg|svn|virtualenvs|virtualbox-vms)$',
    \ 'file': '\v\.(exe|so|dll|pyc|out)$',
    \ 'link': 'SOME_BAD_SYMBOLIC_LINKS',
    \ }
let g:ctrlp_clear_cache_on_exit = 0      "  don't clean cache when exiting vim
let g:ctrlp_show_hidden = 1              "  show hidden files
