#+TITLE: README
#+SUBTITLE: My personal dotfiles
#+AUTHOR: Ben Mezger
#+DATE: <2020-08-06 Thu>

#+HTML_DOCTYPE: xhtml5
#+HTML_HTML5_FANCY:
#+EXPORT_FILE_NAME: ./docs/index.html

#+INFOJS_OPT: view:t toc:t ltoc:t mouse:underline buttons:0 path:https://thomasf.github.io/solarized-css/org-info.min.js
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="https://thomasf.github.io/solarized-css/solarized-dark.min.css" />

#+BEGIN_EXPORT HTML
<p>
  <a
    href="https://github.com/benmezger/dotfiles/actions"><img
    src="https://github.com/benmezger/dotfiles/workflows/dotfiles/badge.svg"
    alt="Build Status">
  </a>
</p>
#+END_EXPORT

/Github does not render orgmode files properly, [[https://benmezger.github.io/dotfiles][see]] for a better view of this
documentation./

* Features
- Auto install all system dependencies with Ansible
- Applies secrets and password with =bitwarden=
- Custom scripts in =.bin=
- =Alacritty= config based on OS
- =fish= configuration
- =neomutt= support with multiple accounts
- =msmtp= for sending emails with multiple account support
- =mbsync= for syncing emails with multiple account support
- Custom =curl= configuration
- Custom =dircolors= (Gruvbox-dark colorscheme)
- Custom =gitconfig=
  + Custom =git= templates for commit messages
- Custom =tmux= configuration
  + =Gitmux= configuration
  + =Gruvbox= colorscheme
- Custom =zsh= configuration
  + Auto attach a =tmux= session when running on OSX
  + Sources a custom =env= file for secret keys
  + Fast =zsh= prompt with =git= =RPROMPT= enabled
  + Custom completion files enabled
  + =fzf= enabled for reverse search
  + =pyenv= support
  + =wakatime= support
- Custom =bash= configuration
- Custom =emacs doom= configuration
  + =wakatime= support
  + =mu4e= enabled
- Custom =gnupg= configuration
- Custom =inputrc= configuration
- Custom =pythonrc= configuration
- Clean =vim= configuration
- Custom =editorconfig= configuration
- Custom =weechat= configuration

** OSX features
- Auto start a =tmux= session with =launchctl=
- Custom OSX preference setup
- Run =isync= and =mu= with =launchctl= every 5min

** Archlinux features
- Auto start =greenclip= with =systemd=
- Run =isync= and =mu= with =systemd= every 5min
- =i3-display= support for handling multi-monitor
- Custom =i3wm= configuration
  + Custom =i3status-rs= support with Gruvbox colorscheme
  + =polybar= support
- =picom= support
- =rofi= support with clipboard manager
- Minimal =dunst= notification manager
- Custom =user-dirs= configuration
* Screenshots
** Archlinux
#+ATTR_HTML: :alt archlinux-screenshot :align center :width 850px
[[./arch-screenshot.png]]

** OSX
#+ATTR_HTML: :alt osx-screenshot :align center :width 850px
[[./osx-screenshot.png]]


* Auto installer
Run =bash install.sh=, which installs the required dependencies for running the
ansible playbooks

* Installing manually with Ansible
** Requirements
- [[https://docs.ansible.com/ansible/latest/installation_guide/intro_installation.html][Ansible]]

Install Ansible galaxy requirements with =ansible-galaxy install -r
requirements.yml=
** OSX
For MacOS, run =ansible-playbook -i inventory osx.yml=
** Archlinux
For Linux, run =ansible-playbook -i inventory archlinux.yml=

* Installing manually with Chezmoi
** Requirements
- [[https://www.chezmoi.io/][Chezmoi]]
- [[https://bitwarden.com/help/article/cli/#quick-start][Bitwarden-cli]]
** Installing
Run =chezmoi init https://github.com/benmezger/dotfiles.git= (see [[https://www.chezmoi.io/docs/reference/][reference]] for
more options) to checkout the repository and any submodules. Finally, run
=chezmoi apply= to move changes to your home directory.

When installing without Ansible, =chezmoi= wont install any external
dependencies, so make sure you have all the required dependencies before running
=chezmoi apply=.

Chezmoi will try to apply bitwarden in [[file:dot_env-secrets.tmpl][env-secrets]] if =CI= env is not set or
=secrets= is set to =true= in =chezmoi.yaml= (defaults to =false=). Make sure
the UUID are correct with your password's UUID, [[https://www.chezmoi.io/docs/reference/#onepassword-uuid-vault-uuid][see]] for more information or set
a =CI= env variable before running to skip this step.

* Dependencies
- Fonts
  - [[https://github.com/chrissimpkins/codeface/tree/master/fonts/inconsolata-dz][Inconsolata-DZ]]
  - [[https://sourcefoundry.org/hack/][Hack]]
  - [[https://fontawesome.com/][FontAwesome]]
- ZSH
  - [[https://github.com/getantibody/antibody][Antibody]]
  - [[https://github.com/junegunn/fzf][FZF]]
- Emacs
  - [[https://github.com/hlissner/doom-emacs][Doom Emacs]]
  - Emacs >= 27
- System utilities
  - [[https://github.com/wakatime/wakatime][Wakatime]]
  - [[https://www.gnu.org/software/emacs/][Emacs]]
  - [[https://www.chezmoi.io/][Chezmoi]]
  - [[https://github.com/BurntSushi/ripgrep][Ripgrep]]
  - [[https://github.com/pyenv/pyenv][pyenv]]
  - [[https://gohugo.io/][Hugo]]
  - [[https://bitwarden.com/help/article/cli/#quick-start][Bitwarden-cli]]
- OSX
  - [[https://brew.sh/][Homebrew]]
  - [[https://github.com/mas-cli/mas][Mas]]
- Linux
  - [[https://i3wm.org/][i3wm]]
  - [[https://github.com/fosskers/aura][Aura (Archlinux)]]
  - [[https://github.com/greshake/i3status-rust][i3status-rust]]

* Commands
These are general commands I use while managing my =dotfiles= and my system . I
run them in orgmode itself, but you can simply copy and paste it to your
terminal.
** Chezmoi :dotfiles:chezmoi:

- Apply dotfile changes with Chezmoi.
  #+BEGIN_SRC shell :dir ~/ :cache no :results replace code
  cd $dir
  chezmoi apply -v
  #+END_SRC
- View difference between dotfiles and restores files.
  #+BEGIN_SRC shell :dir ~/ :cache no :results replace code
  cd $dir
  chezmoi diff
  #+END_SRC

- Initialize chezmoi repository, reloading =$HOME/.config/chezmoi/chezmoi.[yaml|toml]=
  #+BEGIN_SRC shell :dir ~/ :cache no :results replace code
  cd $dir
  chezmoi init ~/dotfiles
  #+END_SRC

- Bitwarden integration
  Chezmoi applies Bitwarden's in every file which requires a secret.

  As a result, it requires Bitwarden installed and logged with =bw login
  <email>=. Make sure you change my Bitwarden's UUID to match yours.

  You can test your UUID with:
  #+BEGIN_SRC shell
  bw get item <uuid> | jq .login.password
  #+END_SRC

  Chezmoi will only run Bitwarden against these files if:
    + Environment is not set to =CI=
    + =chezmoi.yaml= has =secrets= set to =true=.

** Emacs :emacs:
General Emacs maintenance.

*** Doom emacs
- Doom compile core and private modules
  #+BEGIN_SRC shell :dir ~/ :cache no :results replace code
  .emacs.d/bin/doom compile :core :private lang/org lang/python tools lang/yaml tools/lsp
  #+END_SRC

*** Required =authinfo= entries
Email and Forge requires the following entries to be set in your
=$HOME/.authinfo=. Make sure you encrypt =.authinfo= with PGP.

#+BEGIN_SRC org :results file :file .authinfo :output-dir ~/
machine api.github.com login <gh-user>^forge password <password>
machine irc.freenode.net login <user> password <passord> port 6667
machine imap.gmail.com login <email> password <password> port 443
machine smtp.gmail.com login <email> password <password> port 587
#+END_SRC

** Linux :linux:
General Linux commands

- Speed up keyboard
  #+BEGIN_SRC :cache no
  xset r rate 180 40
  #+END_SRC

*** Archlinux :archlinux:
- List =pacman= packages ignoring foreing packages (AUR, etc).
  #+BEGIN_SRC sh :results file :file pkgs.pacman :output-dir ./roles/archlinux/tasks/
  pacman -Qqen
  #+END_SRC

  #+RESULTS: Pacman list installed packages without AUR
  [[file:./roles/archlinux/tasks/pkgs.pacman]]

- Get list of foreing (AUR, etc) packages with =pacman=.
  #+BEGIN_SRC sh :results file :file pkgs.aur :output-dir ./roles/archlinux/tasks/
  pacman -Qqem
  #+END_SRC

  #+RESULTS: Pacman list AUR packages
  [[file:./roles/archlinux/tasks/pkgs.aur]]

- Enable color, total download, check space and verbose pkg list when running
  =pacman=.
  #+BEGIN_SRC shell :dir "/sudo::" :cache no
  sudo sed -i '/Color$/s/^#//g' /etc/pacman.conf
  sudo sed -i '/TotalDownload$/s/^#//g' /etc/pacman.conf
  sudo sed -i '/CheckSpace$/s/^#//g' /etc/pacman.conf
  sudo sed -i '/VerbosePkgLists$/s/^#//g' /etc/pacman.conf
  #+END_SRC
- Find all =*.pacnew= files in =/etc=
  #+BEGIN_SRC shell :cache no :dir "/sudo::" :results output
  find /etc -regextype posix-extended -regex ".+\.pac(new|save)"
  #+END_SRC

**** Docker :docker:
- Allow Docker runs with non-root user.
  #+BEGIN_SRC shell
  sudo usermod -aG docker $USER
  newgrp docker
  #+END_SRC

*** Sourcing env with i3
- For some reason, i3 is sourcing =.xprofile= instead of =xinitrc=, so for
  getting Github plugin for the [[file:dot_config/i3/status.toml][i3status-rust]] you need to set up a variable in
  your =.xprofile=
  #+BEGIN_SRC shell
  export I3RS_GITHUB_TOKEN="your-github-token"
  #+END_SRC

** OSX
*** Set OSX defaults
#+BEGIN_SRC shell
# Turn on app auto-update
defaults write com.apple.commerce AutoUpdate -bool true

# Install System data files & security updates
defaults write com.apple.SoftwareUpdate CriticalUpdateInstall -int 1

# Download newly available updates in background
defaults write com.apple.SoftwareUpdate AutomaticDownload -int 1

# Check for software updates daily, not just once per week
defaults write com.apple.SoftwareUpdate ScheduleFrequency -int 1

# Donâ€™t show recent applications in Dock
defaults write com.apple.dock show-recents -bool false

# Automatically hide and show the Dock
defaults write com.apple.dock autohide -bool true

# Remove the auto-hiding Dock delay
defaults write com.apple.dock autohide-delay -float 0
# Remove the animation when hiding/showing the Dock
defaults write com.apple.dock autohide-time-modifier -float 0
#+END_SRC


* Troubleshooting
** Chezmoi does not seem to reload the configuration
Run =chezmoi init <dotfiles-path>= again. This should reload the configuration
by copying [[file:.chezmoi.yaml.tmpl][chezmoi.yaml]] to =$HOME/.config/chezmoi/chezmoi.yaml=.
** Ansible fails due to required administration password
Run =ansible= with =-K= flag before executing for prompting for the root
password before executing tasks.
** =You are not currently signed in. Please run `op signin --help` for instructions=
This is because =chezmoi= requires =bitwarden= to be logged in for filling any
secrets. Make sure your bitwarden's UUIDS are up to date, see [[https://github.com/twpayne/chezmoi/blob/master/docs/HOWTO.md#use-bitwarden-to-keep-your-secrets][this]] for more
information. After setting all your UUIDS, login with =bw= and
finally run =chezmoi apply=.


* TODOS
** TODO Remove 1Password documents from the configuration file
:LOGBOOK:
- State "TODO"       from              [2021-01-21 Thu 22:34]
:END:
1Password Documents are currently kept as I am slowly migrating to Bitwarden
** TODO Update README on how to install individual configs
** CANCELED Create multi-os support in travis
CLOSED: [2020-08-09 Sun 11:46]
:LOGBOOK:
- State "CANCELED"   from "TODO"       [2020-08-09 Sun 11:46]
  Using github workflow instead of Travis
- State "TODO"       from "DONE"       [2020-08-07 Fri 21:22]
- State "DONE"       from "TODO"       [2020-08-07 Fri 09:09]
:END:
- [X] OSX support
- [X] Linux support
- [X] Get linux to run
- [X] How to handle AUR packages?
** DONE Verify if Github Workflow is caching packages property
CLOSED: [2020-12-04 Fri 09:44]
:LOGBOOK:
- State "DONE"       from "TODO"       [2020-12-04 Fri 09:44]
- State "TODO"       from              [2020-08-09 Sun 11:47]
:END:

** DONE Fix issue with tmux not correctly searching text through panes
CLOSED: [2020-12-04 Fri 09:44]
:LOGBOOK:
- State "DONE"       from "TODO"       [2020-12-04 Fri 09:44]
:END:
** TODO Add Archlinux AUR packages
** DONE Figure out how to handle 1password-cli with Chezmoi when running Ansible
CLOSED: [2020-08-24 Mon 23:43]
:LOGBOOK:
- State "DONE"       from "TODO"       [2020-08-24 Mon 23:43]
- State "TODO"       from              [2020-08-21 Fri 07:57]
:END:

** DONE Switch to =Brewfile=
CLOSED: [2020-08-24 Mon 23:43]
:LOGBOOK:
- State "DONE"       from "TODO"       [2020-08-24 Mon 23:43]
- State "TODO"       from              [2020-08-22 Sat 00:32]
:END:


* Comment :noexport:
# Local variables:
# eval: (add-hook 'after-save-hook 'org-html-export-to-html t t)
# end:
