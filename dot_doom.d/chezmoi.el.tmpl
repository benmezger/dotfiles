;; -*- mode: emacs-lisp;-*-
;;; $DOOMDIR/chezmoi.el -*- lexical-binding: t; -*-

(setq user-full-name "{{ .name }}"
      user-mail-address "{{ .email }}")

{{ if and (not .minimal) (and .secrets) -}}
(use-package! wakatime-mode
  :init
  {{ if eq .chezmoi.os "darwin" -}}
  {{ if eq .chezmoi.arch "arm64" -}}
  (setq wakatime-cli-path "/opt/homebrew/bin/wakatime-cli")
  {{ else -}}
  (setq wakatime-cli-path "/usr/local/bin/wakatime-cli")
  {{ end -}}
  {{ else -}}
  (setq wakatime-cli-path "/usr/bin/wakatime")
  {{ end -}}

  :config
  (global-wakatime-mode))

(use-package! code-stats
  :defer t
  :config
  (setq code-stats-token (auth-source-pick-first-password :host "codestats.net"))
  (add-hook 'prog-mode-hook #'code-stats-mode)
  (run-with-idle-timer 30 t #'code-stats-sync)
  (add-hook 'kill-emacs-hook (lambda () (code-stats-sync :wait))))

(define-globalized-minor-mode my-global-code-stats-mode code-stats-mode
  (lambda () (code-stats-mode 1)))
(my-global-code-stats-mode)

(after! mu4e
  :defer t
  :config
  (require 'mu4e-contrib)
  (setq mu4e-hide-index-messages nil
        mu4e-update-interval (* 5 60)
        mu4e-org-contacts-file "~/workspace/org/contacts.org"
        mu4e-change-filenames-when-moving t
        mu4e-compose-dont-reply-to-self t
        mu4e-get-mail-command "mbsync -a"
        mu4e-index-cleanup t
        mu4e-index-lazy-check nil
        mu4e-index-cleanup t
        +mu4e-main-bullet "â€¢"
        ;; because gmail uses labels as folders we can use lazy check since
        ;; messages don't really "move"
        mu4e-index-lazy-check t
        +mu4e-gmail-accounts '(("{{ .email }}" . "personal")
                               {{ if .workconf }}("{{ .work.workmail }}" . "work"){{ end}})
        mu4e-maildir-shortcuts
        '((:maildir "/personal/archives" :key ?a)
          (:maildir "/personal/inbox" :key ?i)
          {{ if .workconf }}(:maildir "/work/inbox" :key ?w){{ end }}
          (:maildir "/personal/sent" :key ?s)
          (:maildir "/personal/list/emacs" :key ?e)
          (:maildir "/personal/list/mu4e" :key ?4)
          (:maildir "/personal/list/debconf" :key ?d)
          (:maildir "/personal/list/cypherpunk" :key ?c)
          (:maildir "/personal/list/ieee-cass" :key ?j)
          (:maildir "/personal/list/riscv" :key ?5))
        smtpmail-queue-dir (expand-file-name "{{ .maildir }}/queue/cur"))

  (defun benmezger/mu4e-mode-hook ()
    (when (featurep! :completion company)
      (message "Disabling company-mode while in mu4e...")
      (company-mode -1)))
  (add-hook 'mu4e-compose-mode-hook 'benmezger/mu4e-mode-hook)

  (add-to-list 'mu4e-headers-actions
               '("org-contact-add" . mu4e-action-add-org-contact) t)
  (add-to-list 'mu4e-view-actions
               '("org-contact-add" . mu4e-action-add-org-contact) t)

  {{ if eq .chezmoi.os "darwin" -}}
  (setq sendmail-program "/usr/local/bin/msmtp"
        send-mail-function 'smtpmail-send-it
        message-sendmail-f-is-evil t
        message-sendmail-extra-arguments '("--read-envelope-from")
        message-send-mail-function 'message-send-mail-with-sendmail)
  {{ else -}}
  (setq sendmail-program "/usr/bin/msmtp"
        send-mail-function 'smtpmail-send-it
        message-sendmail-f-is-evil t
        message-sendmail-extra-arguments '("--read-envelope-from")
        message-send-mail-function 'message-send-mail-with-sendmail)
  {{- end }}

  (set-email-account! "personal"
                      '((mu4e-sent-folder       . "/personal/sent")
                        (mu4e-drafts-folder     . "/personal/drafts")
                        (mu4e-trash-folder      . "/personal/trash")
                        (mu4e-refile-folder     . "/personal/archives")
                        (user-mail-address      . "{{ .email }}")
                        (smtpmail-smtp-user     . "{{ .email }}")
                        (smtpmail-smtp-server   . "{{ .smtp_host }}")
                        (smtpmail-smtp-service  . {{ .smtp_port }})
                        (mu4e-compose-signature . (with-temp-buffer
                                                    (insert-file-contents "~/.config/neomutt/signature-short.personal")
                                                    (buffer-string)))))
  {{ if .workconf -}}
  (set-email-account! "work"
                      '((mu4e-refile-folder     . "/personal/work")
                        (smtpmail-smtp-user     . "{{ .work.workmail }}")
                        (user-mail-address      . "{{ .work.workmail }}")
                        (smtpmail-smtp-server   . "{{ .work.smtp_host }}")
                        (smtpmail-smtp-service  . {{ .work.smtp_port }})
                        (mu4e-compose-signature . "{{ .name }}")))
  {{- end }}

  (when (file-exists-p (concat org-directory "/elisp/mu4e-bookmarks.el"))
    (load (concat org-directory "/elisp/mu4e-bookmarks.el")))

  (add-hook 'message-send-hook
            (lambda ()
              (unless (yes-or-no-p "really send message to space?")
                (signal 'quit nil))))

  (defun benmezger/mu4e-choose-signature ()
    "Insert one of a number of sigs"
    (interactive)
    (let ((message-signature
           (mu4e-read-option "Signature:"
                             '(
                               ("full" . (with-temp-buffer
                                           (insert-file-contents
                                            "~/.config/neomutt/signature-full.personal")
                                           (buffer-string)))
                               ("short" . (with-temp-buffer
                                            (insert-file-contents
                                             "~/.config/neomutt/signature-short.personal")
                                            (buffer-string)))
                               ("tiny" . (with-temp-buffer
                                           (insert-file-contents
                                            "~/.config/neomutt/signature-tiny.personal")
                                           (buffer-string)))))))
      (message-insert-signature)))

  (add-hook 'mu4e-compose-mode-hook
            (lambda () (local-set-key (kbd "C-c C-w") #'benmezger/mu4e-choose-signature))))

(after! notmuch
  :init
  (set-popup-rule! "^\\*notmuch-hello" :side 'bottom :size 30 :ttl 0 :ignore t)
  :defer t
  :config

  (set-popup-rule! "^\\*notmuch-hello" :side 'bottom :size 30 :ttl 0 :ignore t)
  (set-popup-rule! "^\\*notmuch-saved-search-emacs*" :side 'bottom :size 30 :ttl 0)

  (add-hook 'notmuch-hello-refresh-hook
            (lambda ()
              (if (and (eq (point) (point-min))
                       (search-forward "Saved searches:" nil t))
                  (progn
                    (forward-line)
                    (widget-forward 1))
                (if (eq (widget-type (widget-at)) 'editable-field)
                    (beginning-of-line)))))

  (setq message-kill-buffer-on-exit t
        +notmuch-sync-backend "syncmail"
        +notmuch-mail-folder "~/mail"
        notmuch-show-logo nil
        {{ if eq .chezmoi.os "darwin" -}}
        sendmail-program "/usr/local/bin/msmtp"
        send-mail-function 'smtpmail-send-it
        message-sendmail-f-is-evil 't
        message-sendmail-extra-arguments '("--read-envelope-from")
        message-send-mail-function 'message-send-mail-with-sendmail
        {{ else -}}
        sendmail-program "/usr/bin/msmtp"
        send-mail-function 'smtpmail-send-it
        message-sendmail-f-is-evil t
        message-sendmail-extra-arguments '("--read-envelope-from")
        message-send-mail-function 'message-send-mail-with-sendmail{{- end }}
        message-default-mail-headers "Cc: \nBcc: \n"
        message-signature-file "~/.config/neomutt/signature-short.personal"
        notmuch-hello-url "https://gmail.com"
        +popup--display-buffer-alist (delq (assoc "^\\*notmuch-hello"
                                                  +popup--display-buffer-alist) +popup--display-buffer-alist)
        notmuch-draft-folder "drafts"
        notmuch-saved-searches nil
        notmuch-archive-tags '("-inbox" "-unread" "-new" "+archived")
        notmuch-saved-searches '((:name "inbox" :query "tag:inbox not tag:deleted" :key "i")
                                 (:name "flagged" :query "tag:flagged" :key "f")
                                 (:name "sent" :query "tag:sent" :key "s")
                                 (:name "drafts" :query "tag:draft" :key "d")
                                 (:name "unread" :query "tag:unread and tag:me" :key "u")
                                 (:name "emacs" :query "tag:emacs" :key "e")
                                 (:name "lwn" :query "tag:lwn" :key "w")
                                 (:name "lists" :query "tag:list" :key "l")
                                 (:name "todos" :query "tag:todo" :key "t"))
        notmuch-show-all-tags-list t
        +notmuch-delete-tags '("+deleted" "-inbox" "-unread" "-archived")
        +notmuch-spam-tags '("+spam" "-inbox" "-unread" "-archived"))

  (load "~/.doom.d/elisp/notmuch-unread.el")

  ;; from: https://github.com/aaptel/notmuch-extract-patch
  (defun benmezger/apply-thread-patchset (repo branch)
    (interactive "Dgit repo: \nsnew branch name: ")
    (let ((tid notmuch-show-thread-id)
          (tmp "/tmp/notmuch-patchset"))
      (shell-command (format "notmuch-extract-patch %s > %s && ( cd %s && git checkout -b %s && git am %s )"
                             (shell-quote-argument tid)
                             (shell-quote-argument tmp)
                             (shell-quote-argument (expand-file-name repo))
                             (shell-quote-argument branch)
                             (shell-quote-argument tmp)))))

  (global-set-key (kbd "M-n p") 'benmezger/apply-thread-patchset))

(use-package org-ai
  :ensure t
  :commands (org-ai-mode org-ai-global-mode)
  :init
  (add-hook 'org-mode-hook #'org-ai-mode)
  (org-ai-global-mode) ; installs global keybindings on C-c M-a
  :config
  (setq org-ai-default-chat-model "gpt-4")
  (org-ai-install-yasnippets))
{{ end -}}

(global-set-key (kbd "M-n s") 'notmuch-search)
(global-set-key (kbd "M-n t") 'notmuch-search-by-tag)
(global-set-key (kbd "M-n c") '+notmuch/compose)
(global-set-key (kbd "M-n u") '+notmuch/update)

{{ if ne .chezmoi.os "darwin" -}}
(use-package! pkgbuild-mode
  :defer t
  :init
  (setq auto-mode-alist (append '(("/PKGBUILD$" . pkgbuild-mode)) auto-mode-alist)))
{{ end -}}


(after! ob-mermaid
  :defer t
  :init
  {{ if eq .chezmoi.os "darwin" -}}
  (setq ob-mermaid-cli-path "/usr/local/bin/mmdc")
  {{ else -}}
  (setq ob-mermaid-cli-path "/usr/bin/mmdc")
  {{ end -}}
  )
